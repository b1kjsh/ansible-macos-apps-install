---

- debug: var=macos_apps_install_list
  when: verbose

- name: ensure download directory exists
  file:
    dest: "{{ install_archives }}"
    state: directory
    mode: '0755'

## https://github.com/ansible/ansible/issues/18894
- name: check if pip available
  stat: path="{{ pip_path }}"
  register: hasPip
- name: Bug workaround - https://github.com/ansible/ansible/issues/18894
  pip:
    name: "{{Â item }}"
    state: present
    executable: "{{ pip_path }}"
  with_items:
    - requests>=2.12
    - urllib3>=1.19
    - pyOpenSSL>=16.0
    - pyasn1>=0.1.9
    - ndg-httpsclient>=0.4.2
  when: hasPip.stat.exists and ansible_distribution_version.split('.')[1]|int <= 11
  register: pkg_result
  until: pkg_result is success

- name: download macos applications
  get_url:
    url: "{{ item.u }}"
    dest: "{{ install_archives }}/{{ item.f | default(item.u | basename) }}"
    mode: '0644'
    validate_certs: "{{ item.v | default(true) }}"
    sha256sum: "{{ item.s | default('sha256:unknown') }}"
    tmp_dest: /tmp/
  with_items: "{{ macos_apps_install_list }}"
  vars:
    ansible_python_interpreter: python3

- name: install macos applications
  include: "dmg.yml app_url={{ item.u }} downloads={{ install_archives }} app_dmg={{ item.f | default(item.u | basename) }} v={{ item.v }} s={{ item.s }} app_name={{ item.n }} installer_type={{ item.t }} mount_pathi={{ item.m | default('') }} version={{ item.version }} versioncmd={{ item.versioncmd | default('') }} dest={{ item.to | default('') }} exec_name={{ item.exec_name | default('') }} env={{ item.env | default('') }} plist_tag={{ item.plist_tag | default('') }}"
  with_items: "{{ macos_apps_install_list }}"
  become: yes
